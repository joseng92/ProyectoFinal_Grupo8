
import javax.swing.*;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;

public class VentanaRegistrarNotas extends javax.swing.JInternalFrame {

    private Clase clase; // Clase actual seleccionada
    private DefaultTableModel modelo;
    private ArrayList<Clase> clasesDelProfesor; // Lista de clases del profesor

    public VentanaRegistrarNotas(BaseDeDatos baseDeDatos, Usuario usuario) {
        
        initComponents();

        // Inicializar clases del profesor
        clasesDelProfesor = new ArrayList<>();
        for (Clase c : baseDeDatos.getClases()) {
            if (c.getProfesor().getIdUsuario().equals(usuario.getIdUsuario())) { // Comparación directa por idUsuario
                clasesDelProfesor.add(c);
            }
        }

        if (clasesDelProfesor.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No tiene clases asignadas para registrar notas.", "Aviso", JOptionPane.WARNING_MESSAGE);
            dispose();
            return;
        }

        // Configurar ComboBox con las clases del profesor (agregar objeto completo)
        for (Clase c : clasesDelProfesor) {
            jboxClases.addItem(c); // Agregar el objeto Clase directamente
        }

        // Configurar el modelo de la tabla
        modelo = new DefaultTableModel(new Object[]{"Estudiante", "Periodo 1", "Periodo 2", "Periodo 3", "Nota Final", "Promedio"}, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                // Solo permitir edición en las columnas de los periodos
                return column >= 1 && column <= 3;
            }
        };

        jTable1.setModel(modelo);

        // Listener para detectar cambios en las columnas de los periodos
        modelo.addTableModelListener(e -> {
            if (e.getType() == TableModelEvent.UPDATE) {
                int row = e.getFirstRow();
                recalcularNotas(row);
            }
        });
    }

    private void cargarEstudiantes() {
        modelo.setRowCount(0); // Limpia la tabla antes de cargar nuevos datos
        if (clase != null) {
            for (Estudiante estudiante : clase.getEstudiantes()) {
                Nota nota = clase.obtenerNotas(estudiante);
                modelo.addRow(new Object[]{
                    estudiante.getNombre(),
                    nota != null ? nota.getPeriodo1() : 0,
                    nota != null ? nota.getPeriodo2() : 0,
                    nota != null ? nota.getPeriodo3() : 0,
                    nota != null ? nota.calcularNotaFinal() : 0,
                    nota != null ? nota.calcularPromedio() : 0
                });
            }
        }
    }

    private void recalcularNotas(int row) {
        // Obtener las notas de los periodos desde la tabla
        double periodo1 = Double.parseDouble(modelo.getValueAt(row, 1).toString());
        double periodo2 = Double.parseDouble(modelo.getValueAt(row, 2).toString());
        double periodo3 = Double.parseDouble(modelo.getValueAt(row, 3).toString());

        // Calcular la Nota Final y el Promedio
        double notaFinal = periodo1 + periodo2 + periodo3;
        double promedio = notaFinal / 3.0;

        // Actualizar las columnas de Nota Final y Promedio en la tabla
        modelo.setValueAt(notaFinal, row, 4);
        modelo.setValueAt(promedio, row, 5);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jboxClases = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnGuardarNotas = new javax.swing.JButton();

        setClosable(true);
        setTitle("Registrar Notas");

        jLabel1.setText("Seleccione la Clase:");

        jboxClases.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccion una clase" }));
        jboxClases.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jboxClasesActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Estudiante", "Periodo 1", "Periodo 2", "Periodo 3", "Nota Final", "Promedio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
        }

        btnGuardarNotas.setText("Guardar Notas");
        btnGuardarNotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarNotasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(btnGuardarNotas)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jboxClases, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(131, 131, 131))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jboxClases, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGuardarNotas)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jboxClasesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jboxClasesActionPerformed
        // Recuperar la clase seleccionada
        int index = jboxClases.getSelectedIndex();
        if (index >= 0) {
            clase = (Clase) jboxClases.getItemAt(index); // Obtener el objeto completo Clase
            cargarEstudiantes(); // Actualiza la tabla con los estudiantes
        }
    }//GEN-LAST:event_jboxClasesActionPerformed

    private void btnGuardarNotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarNotasActionPerformed
        if (clase == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una clase.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        for (int i = 0; i < modelo.getRowCount(); i++) {
            Estudiante estudiante = clase.getEstudiantes().get(i); // Obtener estudiante
            double periodo1 = Double.parseDouble(modelo.getValueAt(i, 1).toString());
            double periodo2 = Double.parseDouble(modelo.getValueAt(i, 2).toString());
            double periodo3 = Double.parseDouble(modelo.getValueAt(i, 3).toString());
            clase.registrarNotas(estudiante, periodo1, periodo2, periodo3); // Registrar notas
        }

        JOptionPane.showMessageDialog(this, "Notas guardadas correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnGuardarNotasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardarNotas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<Object> jboxClases;
    // End of variables declaration//GEN-END:variables
}
